{"ast":null,"code":"import { uiActions } from \"./ui-slice\";\nimport { cartActions } from \"./cart-slice\";\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: \"pending\",\n      title: \"Sending...\",\n      message: \"Sending cart data!\"\n    }));\n\n    const sendRequest = async () => {\n      const response = await fetch(\"https://redux-app-c4623-default-rtdb.europe-west1.firebasedatabase.app/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify({\n          items: cart.items,\n          totalQuantity: cart.totalQuantity\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed.\");\n      }\n    };\n\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: \"success\",\n        title: \"Success...\",\n        message: \"Success sent cart data!\"\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Failed sent cart data!\"\n      }));\n    }\n  };\n};\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch(\"https://redux-app-c4623-default-rtdb.europe-west1.firebasedatabase.app/cart.json\");\n\n      if (!response.ok) {\n        throw new Error(\"Could not fetch data.\");\n      }\n\n      const data = await response.json();\n      return data;\n    };\n\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart(cartData));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Failed fetch cart data!\"\n      }));\n    }\n  };\n};","map":{"version":3,"sources":["/home/lewagon/code/Eduard-tech/Udemy-React/redux_advannce/src/store/cart-actions.js"],"names":["uiActions","cartActions","sendCartData","cart","dispatch","showNotification","status","title","message","sendRequest","response","fetch","method","body","JSON","stringify","items","totalQuantity","ok","Error","error","fetchCartData","fetchData","data","json","cartData","replaceCart"],"mappings":"AAAA,SAASA,SAAT,QAA0B,YAA1B;AACA,SAASC,WAAT,QAA4B,cAA5B;AAEA,OAAO,MAAMC,YAAY,GAAIC,IAAD,IAAU;AACpC,SAAO,MAAOC,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CACNJ,SAAS,CAACK,gBAAV,CAA2B;AACzBC,MAAAA,MAAM,EAAE,SADiB;AAEzBC,MAAAA,KAAK,EAAE,YAFkB;AAGzBC,MAAAA,OAAO,EAAE;AAHgB,KAA3B,CADM,CAAR;;AAQA,UAAMC,WAAW,GAAG,YAAY;AAC9B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,kFAD0B,EAE1B;AACEC,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,KAAK,EAAEb,IAAI,CAACa,KADO;AAEnBC,UAAAA,aAAa,EAAEd,IAAI,CAACc;AAFD,SAAf;AAFR,OAF0B,CAA5B;;AAUA,UAAI,CAACP,QAAQ,CAACQ,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACD;AACF,KAdD;;AAgBA,QAAI;AACF,YAAMV,WAAW,EAAjB;AACAL,MAAAA,QAAQ,CACNJ,SAAS,CAACK,gBAAV,CAA2B;AACzBC,QAAAA,MAAM,EAAE,SADiB;AAEzBC,QAAAA,KAAK,EAAE,YAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADM,CAAR;AAOD,KATD,CASE,OAAOY,KAAP,EAAc;AACdhB,MAAAA,QAAQ,CACNJ,SAAS,CAACK,gBAAV,CAA2B;AACzBC,QAAAA,MAAM,EAAE,OADiB;AAEzBC,QAAAA,KAAK,EAAE,QAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADM,CAAR;AAOD;AACF,GA3CD;AA4CD,CA7CM;AAgDP,OAAO,MAAMa,aAAa,GAAG,MAAM;AACjC,SAAO,MAAOjB,QAAP,IAAoB;AACzB,UAAMkB,SAAS,GAAG,YAAY;AAC5B,YAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,kFAAD,CAA5B;;AACA,UAAI,CAACD,QAAQ,CAACQ,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AACD,YAAMI,IAAI,GAAG,MAAMb,QAAQ,CAACc,IAAT,EAAnB;AAEA,aAAOD,IAAP;AACD,KARD;;AAUA,QAAI;AACF,YAAME,QAAQ,GAAG,MAAMH,SAAS,EAAhC;AACAlB,MAAAA,QAAQ,CAACH,WAAW,CAACyB,WAAZ,CAAwBD,QAAxB,CAAD,CAAR;AACD,KAHD,CAGE,OAAOL,KAAP,EAAc;AACdhB,MAAAA,QAAQ,CACNJ,SAAS,CAACK,gBAAV,CAA2B;AACzBC,QAAAA,MAAM,EAAE,OADiB;AAEzBC,QAAAA,KAAK,EAAE,QAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADM,CAAR;AAOD;AAEF,GAxBD;AAyBD,CA1BM","sourcesContent":["import { uiActions } from \"./ui-slice\";\nimport { cartActions } from \"./cart-slice\";\n\nexport const sendCartData = (cart) => {\n  return async (dispatch) => {\n    dispatch(\n      uiActions.showNotification({\n        status: \"pending\",\n        title: \"Sending...\",\n        message: \"Sending cart data!\",\n      })\n    );\n\n    const sendRequest = async () => {\n      const response = await fetch(\n        \"https://redux-app-c4623-default-rtdb.europe-west1.firebasedatabase.app/cart.json\",\n        {\n          method: \"PUT\",\n          body: JSON.stringify({\n            items: cart.items,\n            totalQuantity: cart.totalQuantity\n          }),\n        }\n      );\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed.\");\n      }\n    };\n\n    try {\n      await sendRequest();\n      dispatch(\n        uiActions.showNotification({\n          status: \"success\",\n          title: \"Success...\",\n          message: \"Success sent cart data!\",\n        })\n      );\n    } catch (error) {\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"Failed sent cart data!\",\n        })\n      );\n    }\n  };\n};\n\n\nexport const fetchCartData = () => {\n  return async (dispatch) => {\n    const fetchData = async () => {\n      const response = await fetch(\"https://redux-app-c4623-default-rtdb.europe-west1.firebasedatabase.app/cart.json\")\n      if (!response.ok) {\n        throw new Error(\"Could not fetch data.\");\n      }\n      const data = await response.json();\n\n      return data;\n    }\n\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart(cartData));\n    } catch (error) {\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"Failed fetch cart data!\",\n        })\n      );\n    }\n\n  };\n};"]},"metadata":{},"sourceType":"module"}